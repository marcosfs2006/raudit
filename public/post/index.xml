<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on RAudit Solution LLP</title>
    <link>/post/</link>
    <description>Recent content in Posts on RAudit Solution LLP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 16 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Audit Data Analytics Part1</title>
      <link>/2019/11/16/audit-data-analytics-part1/</link>
      <pubDate>Sat, 16 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/11/16/audit-data-analytics-part1/</guid>
      <description>IntroductionAccounting professionals tend to work under pressure so that they can cover as much ground as possible. However, tools at their disposal often have very limited power and are unable to optimistically fit their workflow. Furthermore, their work is prone to errors due to too many copy+paste and unreproduciblity.
In my view, R is a perfect tool to increases their productivity and conform to their workflow.</description>
    </item>
    
    <item>
      <title>Git for Windows</title>
      <link>/2019/10/13/git-for-windows/</link>
      <pubDate>Sun, 13 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/10/13/git-for-windows/</guid>
      <description>Installation;
git --version,
git config, git help config,
git config --global user.name &#34;st&#34;,
git config --global user.email &#34;st&#34;,
git config --global --list, git config --list,
Local wd -&amp;gt; staging -&amp;gt; remote repo;
git init, git status,
git add -A, git add ., git add --no-all,
git rm --cached &amp;lt;file&amp;gt;,
git reset,
git commit -m &#34;msg&#34;,
git log, git log --stat,
git remote add origin &amp;lt;link&amp;gt;,
git push -u origin master,</description>
    </item>
    
    <item>
      <title>JavaScript MERN Stack </title>
      <link>/2019/10/08/javascript-mern-stack/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/10/08/javascript-mern-stack/</guid>
      <description>Vanilla JSVariablesTemplate literals: ${}, +, \n, \, +=,
Function scope: var,
Primitive values: const,
Block {scope}: let, this,
null, undefined, symbol,
typeof,
new String(), split(&#39;&#39;), join, substring, substr, trim, padStart (10,&#39;a&#39;), padEnd, replace, concat,
Boolean(),
new Date(), getFullYear,
Math.sqrt, parseInt, toFixed(5), %, %=, parseFloat(svg.attr(&#34;height&#34;)),
new Set([1,1,1,1]), size, add, delete, has, clear,
ObjectObject literal: function maker (city, state){const address = {city: city, state}}
Key vs Value: Object.</description>
    </item>
    
    <item>
      <title>Webscraping JSON Data</title>
      <link>/2019/10/01/webscraping-json-data/</link>
      <pubDate>Tue, 01 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/10/01/webscraping-json-data/</guid>
      <description>req &amp;lt;- &amp;#39;https://data.gov.sg/dataset/7a339d20-3c57-4b11-a695-9348adfd7614/resource/42ff9cfe-abe5-4b54-beda-c88f9bb438ee/data?limit=6000&amp;#39;df &amp;lt;- fromJSON(req)$records %&amp;gt;% as_tibble() %&amp;gt;% mutate(town = str_to_title(town), flat_type = str_to_title(flat_type),floor_area_sqm = as.numeric(floor_area_sqm),street_name = str_to_title(street_name),resale_price = as.numeric(resale_price), lease_commence_date = as.numeric(lease_commence_date), storey_range = str_to_lower(storey_range), block = paste0(&amp;quot;Blk&amp;quot;, block)) %&amp;gt;% separate(month, c(&amp;quot;year&amp;quot;, &amp;quot;month&amp;quot;), sep = &amp;quot;-&amp;quot;) %&amp;gt;% mutate(year = as.numeric(year),month = as.numeric(month), desc = paste0(town, &amp;quot;|&amp;quot;, block, &amp;quot;|&amp;quot;, storey_range, &amp;quot;|&amp;quot;, flat_model, &amp;quot;|&amp;quot;, flat_type, &amp;quot;|&amp;quot;, floor_area_sqm, &amp;quot;:Mth&amp;quot;, month)) %&amp;gt;% select(-12){&#34;</description>
    </item>
    
    <item>
      <title>Fraud Auditors</title>
      <link>/2019/09/26/fraud-auditors/</link>
      <pubDate>Thu, 26 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/09/26/fraud-auditors/</guid>
      <description>FraudsFraud elements;
MaterialityRepresentation is knowingly falseReasonably placed reliance on the representation by someone elseResult in financial damagesDOJ defines illegally activities;
Obscure invesigationsInside dealingsAccounting fraud (aka occupational fraud)Obscure invesigations;
Delete computer filesShred, alter, refuse to provide documentsBriberyInside dealings:
BidsExecutive loansShare tradingAccounting frauds reported by ACFE;
Asset misappropriationsCorruptionsFraudulent financial reportings (Sales/AR + Payment/AP + Payroll/T&amp;amp;E)Position of fraud auditors;</description>
    </item>
    
    <item>
      <title>Group Accounting</title>
      <link>/2019/09/24/group-accounting/</link>
      <pubDate>Tue, 24 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/09/24/group-accounting/</guid>
      <description>What do you purchase (Asset vs Business)?
FRS 103(R) Business Combinations determines if an acquired set of activities and assets is a business;
A business includes an input and a substantive process that together significantly contribute to the ability to create output. e.g. special knowledge and skills, (unlike operating pools in real estate, shipping industry).Optional fair values concentration test: concentrated in a single or a group of similar identifiable asset.</description>
    </item>
    
    <item>
      <title>Listed companies in Singapore</title>
      <link>/2019/08/08/listed-companies-in-singapore/</link>
      <pubDate>Thu, 08 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/08/08/listed-companies-in-singapore/</guid>
      <description>Data collection
by_name_data 1
by_sector data
sti data 2
joint dataset
Data table
Data visualization
Codes and the data table will be available on RPubs soon. You can get the list from there.
Get data from sginvestors.↩
Get data from wikipedia.↩
</description>
    </item>
    
    <item>
      <title>test post</title>
      <link>/2019/07/21/test-post/</link>
      <pubDate>Sun, 21 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/07/21/test-post/</guid>
      <description>You guessed. :) This is a test post.
library(tidyverse)## -- Attaching packages ----------------------------------------------------------- tidyverse 1.2.1 --## v ggplot2 3.2.0 v purrr 0.3.2## v tibble 2.1.3 v dplyr 0.8.1## v tidyr 0.8.3 v stringr 1.4.0## v readr 1.3.1 v forcats 0.4.0## -- Conflicts -------------------------------------------------------------- tidyverse_conflicts() --## x dplyr::filter() masks stats::filter()## x dplyr::lag() masks stats::lag()mtcars %&amp;gt;% ggplot(aes(mpg, hp, color = as.factor(gear))) +geom_point(show.</description>
    </item>
    
  </channel>
</rss>